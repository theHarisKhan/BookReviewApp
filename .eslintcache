[{"G:\\Educational Material\\ReactCourse\\book-review-app\\src\\index.js":"1","G:\\Educational Material\\ReactCourse\\book-review-app\\src\\App.js":"2"},{"size":219,"mtime":1608663915043,"results":"3","hashOfConfig":"4"},{"size":3074,"mtime":1623279162471,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uur16",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"G:\\Educational Material\\ReactCourse\\book-review-app\\src\\index.js",[],"G:\\Educational Material\\ReactCourse\\book-review-app\\src\\App.js",["11"],"import React,{ useEffect, useState } from 'react'\nimport './App.css';\n\nconst API_KEY = 'AIzaSyB4fSnOAUSUuKkzq8idjk--a6wVKgfMUSY'\n\nfunction App() {\n  const [books, setBooks] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const [query, setQuery] = useState('hacking')\n  const [id, setId] =  useState('')\n  const [term, setTerm] = useState(false)\n\n\n  useEffect(()=>{\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}&key=${API_KEY}`)\n      .then(response => response.json())\n      .then(result => {\n        setBooks(result.items)\n        console.log(books)\n      }).catch((error) => alert(error.message))\n  },[query])\n\n  const getSearch = e => {\n    e.preventDefault()\n    //replace empty space in search with plus sign(http-Search)\n    if (search !== \"\"){\n      search.replace(new RegExp(\" \",\"g\"),'+')\n      setQuery(search)\n      setSearch('')\n    } else {\n      alert(\"Enter Book Name\")\n    }\n  }\n\n  const CheckIt = (id) => {\n    setId(id)\n    console.log(\"Book id: \"+id)\n    setTerm(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Look Book</h1>\n\n      <form onSubmit={getSearch} className=\"search--form\">\n        <input \n          type=\"text\" \n          className=\"search--bar\"\n          placeholder=\"Search Book...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n        />\n        <button className=\"search--btn\" type=\"submit\">\n          <img src=\"https://img.icons8.com/color/344/4a90e2/search--v1.png\" alt=\"\"/>\n        </button>\n      </form>\n\n      <div className=\"books\">\n        {books?.slice(0,3).map((book,key)=>(\n          <div key={key} className=\"book--item\">\n            <img \n              src={Object.values(book?.volumeInfo.imageLinks)[0]} \n              alt={book?.volumeInfo.title} \n              className=\"BookImg\"\n            />\n            <div className=\"book--item-btns\">\n              <a \n                href={book?.volumeInfo.previewLink} \n                target='_blank'\n                rel=\"noreferrer\"\n                className=\"preview--btn\"\n              >\n                Preview\n              </a>\n\n              {book?.accessInfo.pdf['acsTokenLink'] !== undefined ? (\n                <button \n                  onClick={()=>CheckIt(book?.id)}\n                  className=\"read--btn\"\n                >\n                Read Online\n              </button>\n              ):(\n                <h3 className=\"null--point\">Not Available</h3>\n              )}\n\n            </div>\n                        \n          </div>\n        ))}\n      </div>\n      {(term) ? (\n        <div className=\"reading--block\">\n          <button \n            onClick={()=>setTerm(false)}\n            className=\"close--btn\"\n          >\n            X\n          </button>\n\n        {/* for online Book Reading */}\n          <iframe \n              title=\"Pdf Viewer\"\n              src={`https://books.google.com.pk/books?id=${id}&lpg=PP1&pg=PP1&output=embed`}\n              className=\"iframe\">\n          </iframe>\n        </div>\n      ) : ('')}\n\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":21,"column":5,"nodeType":"14","endLine":21,"endColumn":12,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'books'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [books, query]",{"range":"19","text":"20"},[635,642],"[books, query]"]